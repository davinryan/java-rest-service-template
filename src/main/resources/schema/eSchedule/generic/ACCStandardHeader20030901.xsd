<?xml version="1.0" encoding="UTF-8"?>
<!--
    Name:              ACC_Standard_Header_SubSchema
    Description:     This XML defines the standard header to be attached to all XML messages. 
    				It occurs at the beginning of each XML file and represents header information that is included in all XML document generated by ACC.
    			
    Schema Name:	ACCStandardHeader				 
    Version:        		1.0
    Version Created:	9 August 2002
    
    Schema Name:	ACCStandardHeader20030508				 
    Version:        		1.1
    Version Created:	8 May 2003
    Change:			eForm is has been reviewed and a number of changes are required for clarity and  to align with mfpUptake requirements.
    					The deployment_mode and document_sender elements  have been removed from the schema and a number of descriptions have
    					 been changed for clarity. 
    					 
    Schema Name:	ACCStandardHeader20030722				 
    Version:        		1.2
    Version Created:	22 July 2003
    Change:			A testing problem with using namespace. Remove xmlns="http://www1.acc.co.nz/namespace"  reference from xsd schema.

    Schema Name:	ACCStandardHeader20030901				 
    Version:        		1.3
    Version Created:	01 September 2003
    Change:			The problems of 22 July with namespace were resolved but did not solve all problems very cleanly. 
    					To this end, a review of namespace usage was investigated and a solution developed.
    					The solution changes the way in which namespaces are addressed internally and externally and makes it much tidier.
    					The structure of the library has also changed to bring all directories in at the same structure level to accommodate type libraries.
    					There is no actual change to this sub-schema but if a data type was required it would need to reference the data type namespace
    					ie. xmlns:xmldt="http://xmlschema.acc.co.nz/"


    
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xsd:annotation>
		<xsd:documentation>ACCStandardHeader - This element occurs at the beginning of each XML file and represents header information that is included in all XML document generated by ACC.</xsd:documentation>
	</xsd:annotation>
	<xsd:element name="ACCStandardHeader">
		<xsd:annotation>
			<xsd:documentation>This element occurs once at the beginning of each XML file, and represents header information that is included in all XML documents generated by ACC.    The ACCStandardHeader is not being used at present and although the header label must be in the message there is no requirement to include any labels below it. The application may or may not decide to include subordinate labels.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:annotation>
					<xsd:documentation>A complex type defining the details for an ACC standard XML header. All of the elements are optional at present.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="copyright" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>This element provides the ability to include a copyright statement for the author of the XML message.
For XML messages created by ACC this is the static text displaying the ACC copyright statement -   Copyright © 2002 Accident Compensation Corporation.
For other suppliers of XML messages this is the statement they wish to appear at the start of their message.
</xsd:documentation>
						<xsd:appinfo>Output XML – The precise statement “Copyright © 2002 Accident Compensation Corporation” must be entered into the XML data stream label .

Input XML - This should be the copyright statement for the sender of the XML message. The sender of the message may define their own rules about the content of this label.</xsd:appinfo>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:maxLength value="60"/>
							<xsd:minLength value="0"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
				<xsd:element name="document_from" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>This element defines the identification domain and credential identifier for the originator of the XML message. The document_from labels should enable any viewer of the XML message to be able to identify the unique source of the XML message whether it be from within ACC or from an external source.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:annotation>
								<xsd:documentation>This element contains identification and authentication values used in XML messages.</xsd:documentation>
							</xsd:annotation>
							<xsd:element name="org_domain">
								<xsd:annotation>
									<xsd:documentation>Defines the type of identifier contained in the credential_id label for the originator of the XML message. </xsd:documentation>
									<xsd:appinfo>Output XML – the organisation, department, etc, of who is sending the message. Although ACC is legitimate it should be explicit enough to be able to clearly identify the source of the message generation within the ACC environment.
Example:	- eSchedule MFP XML message this could be “eForm Schedule”\
		- IPS invoice XML to Datamail could be “IPS Invoice”

Input XML – the sender of the XML message should use an org_domain definition that enables ACC to clearly identify the intent of the XML message.
Example:	- the gna XML message from Datamail to ACC could be “Datamail GNA”
</xsd:appinfo>
								</xsd:annotation>
								<xsd:simpleType>
									<xsd:restriction base="xsd:string">
										<xsd:maxLength value="255"/>
										<xsd:minLength value="1"/>
									</xsd:restriction>
								</xsd:simpleType>
							</xsd:element>
							<xsd:element name="credential_id">
								<xsd:annotation>
									<xsd:documentation>This is the credential identifier from the LDAP where applicable or whatever credential is used for authentication of the access. Eventually, if the user signed on with a digital certificate this will identify the digital certificate. It the user signed-on as a guest then ‘guest’ could be the identifier.</xsd:documentation>
									<xsd:appinfo>Output XML - until digital certificates are fully adopted in ACC this can be any identification required by the recipient application to identify the source of the XML message. It could be logon id, sender id, user id, etc

Input XML – this element should contain whatever identification is required by the ACC application to be able to ensure that the XML message is from a legitimate source. Eventually this will probably be the digital certificate identifier or “guest”.
</xsd:appinfo>
								</xsd:annotation>
								<xsd:simpleType>
									<xsd:restriction base="xsd:string">
										<xsd:maxLength value="255"/>
										<xsd:minLength value="1"/>
									</xsd:restriction>
								</xsd:simpleType>
							</xsd:element>
							<xsd:element name="sender_mailbox" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>The sender mailbox is the mail box address by which the originator sender of the document may be contracted.</xsd:documentation>
									<xsd:appinfo>Output XML – unchanged from what ever was received from the originator

Input XML -This label may or may not be able to be completed. In eForm some (if not all) of the PMS files created by PMS software have a header record on the file which contains this information. 


</xsd:appinfo>
								</xsd:annotation>
								<xsd:simpleType>
									<xsd:restriction base="xsd:string">
										<xsd:maxLength value="255"/>
										<xsd:minLength value="0"/>
									</xsd:restriction>
								</xsd:simpleType>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="document_to" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>This element identifies the identification domain and credential identifier for the destination or target of the XML message. The document_to labels should enable any viewer of the XML message to be able to identify the unique destination of the XML message whether it be from within ACC or from an external source.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:annotation>
								<xsd:documentation>This element contains identification and authentication values used in XML messages.</xsd:documentation>
							</xsd:annotation>
							<xsd:element name="org_domain">
								<xsd:annotation>
									<xsd:documentation>Defines the type of identifier contained in the credential_id label for the recipient of the XML message.</xsd:documentation>
									<xsd:appinfo>Output XML - the organisation, department, etc, of who is to be the recipient of the XML message. This element should enable the recipient of the XML message to identify the application that needs to be invoked to process the XML message.
Example:	An XML message from ACC to Datamail for a print run could be “Datamail ”

Input XML - the organisation, department, etc, of who is the sender of the XML message. This element should enable the recipient of the XML message to identify the application that needs to be invoked to process the XML message. 
Example:	An XML message from Datamail to ACC for a gna message could specify “IPS2 gna”
</xsd:appinfo>
								</xsd:annotation>
								<xsd:simpleType>
									<xsd:restriction base="xsd:string">
										<xsd:maxLength value="255"/>
										<xsd:minLength value="1"/>
									</xsd:restriction>
								</xsd:simpleType>
							</xsd:element>
							<xsd:element name="credential_id">
								<xsd:annotation>
									<xsd:documentation>This is the credential identifier for the LDAP where applicable or whatever credential is used for the identification of the recipient.. </xsd:documentation>
									<xsd:appinfo>Output XML - until digital certificates are fully adopted in ACC this can be any identification required by the recipient application to identify the source of the XML message. It could be logon id, sender id, user id, etc

Input XML – this element should contain whatever identification is required by the ACC application to be able to ensure that the XML message is from a legitimate source. Eventually this will probably be the digital certificate identifier or “guest”.
</xsd:appinfo>
								</xsd:annotation>
								<xsd:simpleType>
									<xsd:restriction base="xsd:string">
										<xsd:maxLength value="255"/>
										<xsd:minLength value="1"/>
									</xsd:restriction>
								</xsd:simpleType>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="status" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>This element is meant to be used to convey the state of the XML message, eg. validated, but is not implemented at this stage.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="code">
								<xsd:annotation>
									<xsd:documentation>The status code of the request.</xsd:documentation>
									<xsd:appinfo>Output XML - not used at this stage.

Input XML - not used at this stage.
</xsd:appinfo>
								</xsd:annotation>
								<xsd:simpleType>
									<xsd:restriction base="xsd:string">
										<xsd:maxLength value="6"/>
										<xsd:minLength value="1"/>
									</xsd:restriction>
								</xsd:simpleType>
							</xsd:element>
							<xsd:element name="text" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>The text of the status message.</xsd:documentation>
									<xsd:appinfo>Output XML - not used at this stage.

Input XML - not used at this stage.
</xsd:appinfo>
								</xsd:annotation>
								<xsd:simpleType>
									<xsd:restriction base="xsd:string">
										<xsd:maxLength value="255"/>
										<xsd:minLength value="0"/>
									</xsd:restriction>
								</xsd:simpleType>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
</xsd:schema>
